version: 2.1

executors:
  app-executor:
    docker:
      - image: circleci/node:21.6.1
    working_directory: ~/repo

aliases:
  - &show-current-branch-name
    run:
      name: Show current branch
      command: echo ${CIRCLE_BRANCH}

  - &restore-cache
    restore_cache:
      keys:
        - app-{{checksum "package.json"}}
        - app-

  - &install-dependencies
    run: 
      name: Install dependencies
      command: npm install

  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{checksum "package.json"}}

  - &install-aws-cli
    run:
      name: Installing AWS CLI
      working_directory: /
      command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python3-capstone build-essential

  - &build-project
    run:
      name: Build Project
      command: | 
        npm install
        npm run build
        cd build 
        zip ../build.zip -r * .[^.]*
        echo "Build successful"

jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *restore-cache
      - *install-dependencies
      - *save-cache

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS s3
          command: |
            if ["${CIRCLE_BRANCH}"  == "main"]
            then 
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete
            elif ["${CIRCLE_BRANCH}"  == "staging"]
            then 
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_DEVELOPMENT} --delete
            fi
            
  deploy-to-aws-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli
      - *build-project
      - run:
          name: Deploy to AWS Cloudfront
          command: |
            aws configure set preview.cloudfront true
            if ["${CIRCLE_BRANCH}"  == "main"]
            then 
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION} --paths /\*
            elif ["${CIRCLE_BRANCH}"  == "staging"]
            then 
              aws cloudfront create-invalidation --distribution-id ${STAGE_DISTRIBUTION} --paths /\*
            else
             aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION} --paths /\*
            fi

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - development
                - staging
                - main
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - development
                - staging
                - main